@model masterpeace2.Category

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdminDash.cshtml";
}

@*<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Category_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category_Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category_Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category_Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@



<div class="col-md-7 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h2>Edit</h2>
            <h4 class="card-title">Category</h4>
            <p class="card-description">
                Basic form layout
            </p>
            @using (Html.BeginForm("Edit", "Categories", FormMethod.Post, new { enctype = "multipart/form-data" }))

            {
                @Html.AntiForgeryToken()
                @*<form class="forms-sample">*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Category_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Category_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Category_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category_Image, "Category Image", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="ImageFile" accept="image/*" id="ImageFile" onchange="previewImage(this, 'preview')" />
                        <img id="preview" style="display:none; height:100px; width:100px;" />
                        @Html.ValidationMessageFor(model => model.Category_Image, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                <label for="CategoryImage">Category Image</label>
                <input type="email" class="form-control" id="CategoryImage" placeholder="Email" value="@Html.DisplayFor(model => model.Category_Image)">
            </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                <label for="Description">Description</label>
                <input type="text" class="form-control" id="Description" placeholder="Description" value="@Html.DisplayFor(model => model.Discription)">
            </div>*@

                @*<div class="form-check form-check-flat form-check-primary">
                <label class="form-check-label">
                    <input type="checkbox" class="form-check-input">
                    Remember me
                </label>
            </div>*@

                @*<button type="submit" class="btn btn-primary me-2"> <a href="https://localhost:44350/Categories/Edit">Edit</a></button>*@
                @*@Html.ActionLink("Edit", "Edit", new { id = Model.ID, @class = "btn btn-primary me-2" }) |
            @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-primary me-2" })*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
                @*<button class="btn btn-light">Cancel</button>*@
                @*</form>*@
            }
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>

<script>
    function previewImage(input, previewId) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#' + previewId).attr('src', e.target.result);
                $('#' + previewId).show();
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>